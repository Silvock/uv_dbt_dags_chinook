version: 2


.sql
stg_chin__artists.sql
stg_chin__customers.sql
stg_chin__employees.sql
stg_chin__genre.sql
stg_chin__invoice_lines.sql
stg_chin__invoices.sql
stg_chin__mediatypes.sql
stg_chin__playists_tracks.sql
stg_chin__playlists.sql
stg_chin__reports_from_emp.sql
stg_chin__tracks.sql

models:
  - name: stg_chin__albums
    description: "This model contains information about albums"
    columns:
      - name: album_id
        description: "Primary key, unique identifier for each album"
        tests:
            - unique
            - not_null
      - name: Title
        description: "information about titles of albums"
      - name: artist_id
        description: "Foreign key linking the album to the corresponding artist."
        tests:
          - relationships:
              name: artist_id_foreign_key_in_stg_chin_album
              to: ref('stg_chin__artists')
              field: ArtistId
      - name: _cleaned_title
        description: "Name of the album with the first letter in upper case"
      - name: _nb_char_in_title
        description: "Count the number of character in the album title"


  - name: stg_chin__artists
    description: "This model contains information about artists"
    columns:
      - name: ArtistID
        description: "Primary key, unique identifier for each artist."
        tests:
            - unique
            - not_null
      - name: Name
        description: "information about the name of the artists"
      - name: _cleaned_name
        description: "Make sure the name of the artist start with an upper case"
      - name: _nb_char_name
        description: "Count the number of character in the name of the artist"
      - name: _snd_name
        description: "Convert the name of the artist in sound characters"

  - name: stg_sales_database__order_item
    description: "This model contains information about each item included in an order, including its price, quantity, and shipping cost."
    columns:
      - name: order_item_id
        description: "Primary key, unique identifier for each order item."
        tests:
            - unique
            - not_null
      - name: order_id
        description: "Foreign key linking the order item to the corresponding order."
        tests:
          - relationships:
              name: order_id_id_foreign_key_in_stg_sales_database__order_item
              to: ref('stg_sales_database__order')
              field: order_id
      - name: total_order_item_amount
        description: "The total amount for this order item, calculated as (price * quantity) + shipping_cost."

  - name: stg_sales_database__payment
    description: "This model contains information about payments made for orders, including the sequential payment number."
    columns:
      - name: payment_id
        description: "Primary key, unique identifier for each payment: generated by concatenating order_id and payment_sequential."
        tests:
            - unique
            - not_null
      - name: order_id
        description: "Foreign key linking the payment to the corresponding order."
        tests:
          - relationships:
              name: order_id_id_foreign_key_in_stg_sales_database__payment
              to: ref('stg_sales_database__order')
              field: order_id

  - name: stg_sales_database__product
    description: "This model contains details of products available for sale, primarily focusing on information about the product's volume and size."
    columns:
      - name: product_id
        description: "Primary key, unique identifier for each product."
        tests:
            - unique
            - not_null

  - name: stg_sales_database__seller
    description: "This model contains information about the sellers who provide the products."
    columns:
      - name: seller_id
        description: "Primary key, unique identifier for each seller."
        tests:
            - unique
            - not_null

  - name: stg_sales_database__user
    description: "This model contains user-related information, including where they live."
    columns:
      - name: user_id
        description: "Primary key, unique identifier for each user."
        tests:
            - unique
            - not_null
