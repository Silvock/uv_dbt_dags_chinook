version: 2



models:
  - name: stg_chin__albums
    description: "This model contains information about albums"
    columns:
      - name: AlbumId
        description: "Primary key, unique identifier for each album"
        tests:
            - unique
            - not_null
      - name: Title
        description: "information about titles of albums"
      - name: ArtistId
        description: "Foreign key linking the album to the corresponding artist."
        tests:
          - relationships:
              name: artist_id_foreign_key_in_stg_chin_album
              to: ref('stg_chin__artists')
              field: ArtistId
      - name: _cleaned_title
        description: "Name of the album with the first letter in upper case"
      - name: _nb_char_in_title
        description: "Count the number of character in the album title"


  - name: stg_chin__artists
    description: "This model contains information about artists"
    columns:
      - name: ArtistID
        description: "Primary key, unique identifier for each artist."
        tests:
            - unique
            - not_null
      - name: Name
        description: "information about the name of the artists"
      - name: _cleaned_name
        description: "Make sure the name of the artist start with an upper case"
      - name: _nb_char_name
        description: "Count the number of character in the name of the artist"
      - name: _snd_name
        description: "Convert the name of the artist in sound characters"

  - name: stg_chin__customers
    description: "This model contains information about each customers"
    columns:
      - name: CustomerId
        description: "Primary key, unique identifier for each customer."
        tests:
            - unique
            - not_null
      - name: SupportRepid
        description: "Foreign key linking the order item to the corresponding order."
        tests:
          - relationships:
              name: supportrepid_foreign_key_in_stg_chin__employees
              to: ref('stg_chin__employees')
              field: EmployeeId
      - name: FirstName
        description: "The firstname of the customer"
      - name: LastName
        description: "The lastname of the customer"
      - name: Company
        description: "The company of the customer"
      - name: Address
        description: "The address of the customer"
      - name: City
        description: "The city of the customer"
      - name: State
        description: "The state of the customer"
      - name: Country
        description: "The country of the customer"
      - name: PostalCode
        description: "The postal code of the customer"
      - name: Phone
        description: "The phone of the customer"
      - name: Fax
        description: "The fax of the customer"
      - name: Email
        description: "The email of the customer"
      - name: _cust_full_name
        description: "The full name of the customer"

  - name: stg_chin__employees
    description: "This model contains information about employees from the support"
    columns:
      - name: EmployeeId
        description: "Primary key, unique identifier for each employee"
        tests:
            - unique
            - not_null
      - name: ReportsTo
        description: "Foreign key linking the employees to their managers"
        tests:
          - relationships:
              name: reports_to_foreign_key_in_stg_chin__report_from_emp
              to: ref('stg_chin__report_from_emp')
              field: EmployeeId
      - name: LastName
        description: "The last name of the employee"
      - name: FirstName
        description: "The first name of the employee"
      - name: Title
        description: "The title of the employee"
      - name: _converted_birthdate
        description: "The bithday date of the employee"
      - name: _converted_hiredate
        description: "The hiredate date of the employee"
      - name: Address
        description: "The address of the employee"
      - name: City
        description: "The city of the employee"
      - name: State
        description: "The state of the employee"
      - name: Country
        description: "The country of the employee"
      - name: PostalCode
        description: "The postal code of the employee"
      - name: Phone
        description: "The phone number of the employee"
      - name: Fax
        description: "The fax of the employee"
      - name: Email
        description: "The email of the employee"
      - name: _emp_fullname
        description: "The full name of the employee"

  - name: stg_chin__genre
    description: "This model contains details of products available for sale, primarily focusing on information about the product's volume and size."
    columns:
      - name: GenreId
        description: "Primary key, unique identifier for each genre of music."
        tests:
            - unique
            - not_null
      - name: Name
        description: "The label of the genre"
        tests:
          - accepted_values:
              values: ['Rock', 'Science Fiction', 'Drama', 'Alternative & Punk','Pop','Metal','Latin','World',
                'Soundtrack','Sci Fi & Fantasy','Blues','R&B/Soul','Rock And Roll','Electronica/Dance',
'TV Shows','Jazz','Heavy Metal','Opera','Bossa Nova','Classical','Alternative','Reggae','Easy Listening','Hip Hop/Rap','Comedy']
      - name: _cleaned_name
        description: "The label of the genre with the first letter in upper case"
      - name: _nb_char_name
        description: "The number of characters of the genre"

  - name: stg_chin__invoice_lines
    description: "This model contains information about the invoices lines."
    columns:
      - name: InvoiceLineId
        description: "Primary key, unique identifier for each invoice line."
        tests:
            - unique
            - not_null
      - name: InvoiceId
        description: "Foreign key linking the lines of the invoice with the invoice header"
        tests:
          - relationships:
              name: invoiceid_foreign_key_in_stg_chin__invoices
              to: ref('stg_chin__invoices')
              field: InvoiceId
      - name: TrackId
        description: "Foreign key linking the lines of the invoice with the track header"
        tests:
          - relationships:
              name: trackid_foreign_key_in_stg_chin__tracks
              to: ref('stg_chin__tracks')
              field: TrackId
      - name: UnitPrice
        description: "The unit price of the track"
      - name: Quantity
        description: "The quantity of tracks orderer"
      - name: _invoice_line_total_amt
        description: "the total of the line of the invoice"

  - name: stg_chin__invoices
    description: "This model contains information about invoices"
    columns:
      - name: InvoiceId
        description: "Primary key, unique identifier for each invoice."
        tests:
            - unique
            - not_null
      - name: CustomerId
        description: "Foreign key linking  the invoice with the customer"
        tests:
          - relationships:
              name: customerid_foreign_key_in_stg_chin__customers
              to: ref('stg_chin__customers')
              field: CustomerId
      - name: _converted_invoice_date
        description: "date of the invoice"
      - name: BillingAddress
        description: "the billing address"
      - name: BillingCity
        description: "the billing city"
      - name: BillingState
        description: "the billing state"
      - name: BillingCountry
        description: "the billing country"
      - name: BillingPostalCode
        description: "the billing postal code"
      - name: Total
        description: "the total of the invoice"

  - name: stg_chin__mediatypes
    description: "This model contains information about invoices"
    columns:
      - name: MediaTypeId
        description: "Primary key, unique identifier for each mediatype."
        tests:
            - unique
            - not_null
      - name: Name
        description: "Name of the media"
        tests:
          - accepted_values:
              values: ['Purchased AAC audio file', 'Protected MPEG-4 video file', 'Protected AAC audio file', 'AAC audio file','MPEG audio file']
      - name: _cleaned_name
        description: "name of the media with the first letter in upper case"
      - name: _nb_char_name
        description: "the number of characters of the mediatype"

  - name: stg_chin__playlists_tracks
    description: "This model contains information about playlists tracks"
    columns:
      - name: PlaylistId
        description: "Foreign key linking  the playlists  with the tracks"
        tests:
          - relationships:
              name: playlistid_foreign_key_in_stg_chin__playlists
              to: ref('stg_chin__playlists')
              field: PlaylistId
      - name: TrackId
        description: "Foreign key linking  the tracks with the playlists"
        tests:
          - relationships:
              name: trackid_foreign_key_in_stg_chin__tracks
              to: ref('stg_chin__tracks')
              field: TrackId
      - name: _array_keys
        description: "combinaison of playists and tracks keys"

  - name: stg_chin__playlists
    description: "This model contains information about playlists"
    columns:
      - name: PlaylistId
        description: "Primary key, unique identifier for each playlist."
        tests:
            - unique
            - not_null
      - name: Name
        description: "Name of the playlist"
      - name: _cleaned_name
        description: "name of the playlist with the first letter in upper case"
      - name: _nb_char_name
        description: "the number of characters of the playlist"

  - name: stg_chin__reports_from_emp
    description: "This model contains information about employees from the support"
    columns:
      - name: EmployeeId
        description: "Primary key, unique identifier for each employee"
        tests:
            - unique
            - not_null
      - name: ReportsTo
        description: "Foreign key linking the employees to their managers"
      - name: LastName
        description: "The last name of the manager"
      - name: FirstName
        description: "The first name of the manager"
      - name: Title
        description: "The title of the manager"
      - name: _converted_birthdate
        description: "The bithday date of the manager"
      - name: _converted_hiredate
        description: "The hiredate date of the manager"
      - name: Address
        description: "The address of the manager"
      - name: City
        description: "The city of the manager"
      - name: State
        description: "The state of the manager"
      - name: Country
        description: "The country of the manager"
      - name: PostalCode
        description: "The postal code of the manager"
      - name: Phone
        description: "The phone number of the manager"
      - name: Fax
        description: "The fax of the manager"
      - name: Email
        description: "The email of the manager"
      - name: _manager_full_name
        description: "The full name of the manager"

  - name: stg_chin__tracks
    description: "This model contains information about tracks"
    columns:
      - name: TrackId
        description: "Primary key, unique identifier for each track."
        tests:
            - unique
            - not_null
      - name: Name
        description: "Name of the track"
      - name: _cleaned_track_name
        description: "name of the track with the first letter in upper case"
      - name: AlbumId
        description: "Foreign key linking the tracks to their albums"
        tests:
          - relationships:
              name: albumid_foreign_key_in_stg_chin__albums
              to: ref('stg_chin__albums')
              field: AlbumId
      - name: MediaTypeId
        description: "Foreign key linking the mediatype to their tracks"
        tests:
          - relationships:
              name: mediatype_id_foreign_key_in_stg_chin__mediatypes
              to: ref('stg_chin__mediatypes')
              field: MediaTypeId
      - name: GenreId
        description: "Foreign key linking the genres to their tracks"
        tests:
          - relationships:
              name: genreid_foreign_key_in_stg_chin__genres
              to: ref('stg_chin__genres')
              field: GenreId
      - name: Composer
        description: "list of composer in string"
      - name: _cleaned_array_composer
        description: "list of composer in array"
      - name: Milliseconds
        description: "the duration of the track in milliseconds"
      - name: Bytes
        description: "the size of the track in bytes"
      - name: UnitPrice
        description: "the unit price of the track"
